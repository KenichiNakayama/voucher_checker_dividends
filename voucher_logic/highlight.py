"""Highlight rendering utilities."""
from __future__ import annotations

from typing import Iterable, Sequence

from . import models


class HighlightRenderer:
    """Produces a downloadable PDF containing highlight summaries."""

    def render(self, original_pdf: bytes, spans: Sequence[models.HighlightSpan]) -> bytes:
        if not spans:
            return original_pdf

        summary_lines = [
            f"Span(page={span.page}, label={span.label}, bbox={tuple(round(coord, 3) for coord in span.bbox)})"
            for span in spans
        ]
        summary_text = "\n".join(summary_lines)
        payload = (
            "%%PDF-1.4\n"
            "% Highlighted voucher preview generated by voucher_checker\n"
            "1 0 obj<<>>endobj\n"
            "2 0 obj<<>>endobj\n"
            "3 0 obj<<>>endobj\n"
            f"4 0 obj<</Length {len(summary_text)+1}>>stream\n{summary_text}\nendstream endobj\n"
            "xref\n0 5\n0000000000 65535 f \n"
            "trailer<</Root 1 0 R>>\nstartxref\n0\n%%EOF"
        )
        return payload.encode("utf-8")


__all__ = ["HighlightRenderer"]
